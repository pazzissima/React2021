{"ast":null,"code":"var _jsxFileName = \"/Users/sofyanagaslaeva/Desktop/React2021/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { counterActions } from '../store/counter-slice';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter); //We get full action object automatically created for us here:\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // { type: SOME_UNIQUE_IDENTIFIER, payload: 10 }\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // class Counter extends Component{\n// \tincrementHandler() {\n// \t\tthis.props.increment();\n// \t}\n// \tdecrementHandler() {\n// \t\tthis.props.decrement();\n// \t}\n// \ttoggleCounterHandler(){\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t    <main className={classes.counter}>\n// \t\t      <h1>Redux Counter</h1>\n// \t\t      <div className={classes.value}>{this.props.counter}</div>\n// \t\t      <div>\n// \t\t      \t<button onClick={this.incrementHandler.bind(this)}>Increment</button>\n// \t\t      \t<button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n// \t\t      </div>\n// \t\t      <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n// \t\t    </main>\n// \t\t);\n// \t}\n// }\n// const mapStateToProps = state => {\n// \treturn {\n// \t\tcounter: state.counter\n// \t};\n// }\n// const mapDispatchToProps = dispatch => {\n// \treturn {\n// \t\tincrement: () => dispatch({ type: 'increment'}),\n// \t\tdecrement: () => dispatch({ type: 'decrement'})\n// \t}\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/sofyanagaslaeva/Desktop/React2021/src/components/Counter.js"],"names":["useSelector","useDispatch","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","value"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcA,OAAxB,CAA3B;AACA,QAAME,IAAI,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcG,WAAxB,CAAxB,CAHoB,CAMpB;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC9BL,IAAAA,QAAQ,CAACH,cAAc,CAACS,SAAf,EAAD,CAAR;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC7BP,IAAAA,QAAQ,CAACH,cAAc,CAACW,QAAf,CAAwB,CAAxB,CAAD,CAAR,CAD6B,CACS;AACtC,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC9BT,IAAAA,QAAQ,CAACH,cAAc,CAACa,SAAf,EAAD,CAAR;AACA,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AAClCX,IAAAA,QAAQ,CAACH,cAAc,CAACe,aAAf,EAAD,CAAR;AACA,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAG;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACe,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFV,eAGE;AAAA,8BACC;AAAQ,QAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnCD;;GAAMZ,O;UACaH,W,EACDD,W,EACHA,W;;;KAHTI,O;AAqCN,eAAeA,OAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\nimport { useSelector, useDispatch} from 'react-redux';\nimport { counterActions } from '../store/counter-slice';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter)\n\n\n  //We get full action object automatically created for us here:\n  const incrementHandler = () => {\n  \tdispatch(counterActions.increment());\n  }\n\n  const increaseHandler = () => {\n  \tdispatch(counterActions.increase(5))  // { type: SOME_UNIQUE_IDENTIFIER, payload: 10 }\n  }\n\n  const decrementHandler = () => {\n  \tdispatch(counterActions.decrement());\n  }\n\n  const toggleCounterHandler = () => {\n  \tdispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show &&<div className={classes.value}>{counter}</div>}\n      <div>\n      \t<button onClick={incrementHandler}>Increment</button>\n      \t<button onClick={increaseHandler}>Increase by 5</button>\n      \t<button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component{\n// \tincrementHandler() {\n// \t\tthis.props.increment();\n// \t}\n\n// \tdecrementHandler() {\n// \t\tthis.props.decrement();\n// \t}\n\n// \ttoggleCounterHandler(){\n\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t    <main className={classes.counter}>\n// \t\t      <h1>Redux Counter</h1>\n// \t\t      <div className={classes.value}>{this.props.counter}</div>\n// \t\t      <div>\n// \t\t      \t<button onClick={this.incrementHandler.bind(this)}>Increment</button>\n// \t\t      \t<button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n// \t\t      </div>\n// \t\t      <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n// \t\t    </main>\n// \t\t);\n// \t}\n// }\n\n// const mapStateToProps = state => {\n// \treturn {\n// \t\tcounter: state.counter\n// \t};\n// }\n\n// const mapDispatchToProps = dispatch => {\n// \treturn {\n// \t\tincrement: () => dispatch({ type: 'increment'}),\n// \t\tdecrement: () => dispatch({ type: 'decrement'})\n// \t}\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}